#!/usr/bin/env bash

set -o errexit -o pipefail

main() {
    init

    #@ -h,--help | print this text
    #@ remove | uninstall package/group
    
    for n in "$@"; do
	case "$n" in
	    "@"*)
		remove::group "$n"
		;;
	    *)
		remove::package "$n"
		;;
	esac
    done
}

remove::dependencies() {
    # TODO check if any other packages use it before removing
    local package="${1:?}"

    log::debug "Checking for dependencies."
    
    local dependencies="${package}/REQUIRE"
    if [[ ! -f "$dependencies" ]]; then
	log::debug "No dependencies found. Path '$dependencies' does not exist. Skipping."
	return 0
    fi

    # FIXME: Refactor to remove the ||
    while read -r line || [[ -n "$line"  ]]; do
	if [[ -z "$line" ]]; then
	    continue
	fi
	remove::package "$line"
    done < "$dependencies"
}

remove::group() {
    local name="${1:?}"

    local group="${RAFI_HOME_PKGS_DIR}/group/${name}/ALIAS"
    if [[ ! -f "$group" ]]; then
	log::debug "Path '$group' does not exist."
	log::fatal "Group '$name' does not exist."
    fi

    # FIXME: Refactor to remove the ||
    while read -r line || [[ -n "$line"  ]]; do
	if [[ -z "$line" ]]; then
	    continue
	fi

	remove::package "$line"
    done < "$group"
}

remove::package() {
    set -- $(string::split "${1:?}" "@")

    local name="$1"
    local version="$2"

    local package
    package="$(package::find_by_name "$name")"
    log::debug "Found package: ${package}"

    local install_dir
    install_dir="$(package::find_install "$name" "$version")"
    log::debug "Found package install path: ${install_dir}"

    remove::dependencies "$package"

    local skip=0
    if [[ -z "$install_dir" ]]; then
	log::info "Package '$name' is not installed. Skipping"
	skip=1
    elif [[ ! -d "$install_dir" ]]; then
	log::debug "Path '$install_dir' does not exist."
	skip=1
    fi

    # TODO: be consistent with wording. Use 'ref' everywhere
    if [[ $skip -eq 1 ]]; then
	log::info "Package '${name}' with ref '$version' not installed."
	return 0
    fi

    log::info "Removing $name"
    rm -rf "$install_dir"
    rm -rf "${RAFI_INDEX_INSTALLED_DIR}/${name}"   
}

main "$@"
